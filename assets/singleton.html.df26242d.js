import{_ as t,r as l,o as p,c as i,a as n,b as c,F as o,e as s,d as a}from"./app.622ab2be.js";var u="/tech-blog/assets/singleton_diagram.6c5c94e8.png";const d={},r=s('<h1 id="singleton" tabindex="-1"><a class="header-anchor" href="#singleton" aria-hidden="true">#</a> Singleton</h1><h2 id="\u1103\u1161\u110B\u1175\u110B\u1165\u1100\u1173\u1105\u1162\u11B7" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u110B\u1175\u110B\u1165\u1100\u1173\u1105\u1162\u11B7" aria-hidden="true">#</a> \uB2E4\uC774\uC5B4\uADF8\uB7A8</h2><p><img src="'+u+`" alt="singleton"></p><h2 id="\u1109\u1165\u11AF\u1106\u1167\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1109\u1165\u11AF\u1106\u1167\u11BC" aria-hidden="true">#</a> \uC124\uBA85</h2><p>\uD504\uB85C\uADF8\uB7A8\uC744 \uAC1C\uBC1C\uD558\uB2E4\uBCF4\uBA74 \uC778\uC2A4\uD134\uC2A4\uAC00 \uC5EC\uB7EC\uAC1C\uC77C \uB54C \uBB38\uC81C\uAC00 \uC0DD\uAE38 \uC218 \uC788\uB294 \uACBD\uC6B0\uAC00 \uC788\uB2E4. <br> \uC774 \uACBD\uC6B0, \uC778\uC2A4\uD134\uC2A4\uB97C \uC624\uC9C1 \uD558\uB098\uB9CC \uC0DD\uC131\uD560 \uC218 \uC788\uAC8C \uC81C\uD55C\uD558\uB294 \uD328\uD134.</p><h2 id="singleton-\u1100\u116E\u1112\u1167\u11AB" tabindex="-1"><a class="header-anchor" href="#singleton-\u1100\u116E\u1112\u1167\u11AB" aria-hidden="true">#</a> Singleton \uAD6C\uD604</h2><p><strong><em>Lazy-Initialize Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> instance<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SingletonInstance</code> \uC778\uC2A4\uD134\uC2A4\uB97C \uC0DD\uC131\uD560 \uB54C, new \uD0A4\uC6CC\uB4DC \uB300\uC2E0 static method \uC778 <code>getInstance</code> method \uB97C \uD638\uCD9C\uD558\uC5EC \uC778\uC2A4\uD134\uC2A4\uB97C \uC0AC\uC6A9. <br></p><ul><li><p>\uC7A5\uC810</p><ul><li>Lazy-Initialize \uC791\uB3D9\uBC29\uC2DD\uC73C\uB85C \uC0AC\uC6A9 \uC2DC, \uC778\uC2A4\uD134\uC2A4\uB97C \uC0DD\uC131\uD558\uAE30 \uB54C\uBB38\uC5D0, \uBA54\uBAA8\uB9AC \uCD5C\uC801\uD654</li></ul></li><li><p>\uB2E8\uC810</p><ul><li>Single Thread \uC5D0\uC11C\uB294 \uC548\uC804\uD558\uC9C0\uB9CC, Multi Thread \uC5D0\uC11C \uBB38\uC81C\uAC00 \uC0DD\uAE38 \uC218 \uC788\uC74C</li></ul></li></ul><p><br><br></p><p><strong><em>Synchronized Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> instance<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token class-name">SingletonInstance</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getInstance</code> method \uB97C \uD638\uCD9C\uD560 \uB54C, <em>synchronized</em> \uD0A4\uC6CC\uB4DC\uB97C \uD1B5\uD574 \uC5EC\uB7EC Thread \uC758 \uC811\uADFC\uC744 \uB9C9\uC544 Multi Thread \uC778 \uC0C1\uD669\uC5D0\uC11C \uC548\uC815\uC131\uC744 \uBCF4\uC7A5. <br></p><ul><li><p>\uC7A5\uC810</p><ul><li>Lazy-Initialize \uC791\uB3D9\uBC29\uC2DD\uC73C\uB85C \uC0AC\uC6A9 \uC2DC, \uC778\uC2A4\uD134\uC2A4\uB97C \uC0DD\uC131\uD558\uAE30 \uB54C\uBB38\uC5D0, \uBA54\uBAA8\uB9AC \uCD5C\uC801\uD654</li><li>Single Thread, Multi Thread \uC5D0\uC11C \uB2E8\uC77C \uC778\uC2A4\uD134\uC2A4 \uBCF4\uC7A5</li></ul></li><li><p>\uB2E8\uC810</p><ul><li><em>synchronized lock</em> \uC73C\uB85C \uC778\uD574 \uD55C\uBC88\uC5D0 \uD558\uB098\uC758 Thread \uB9CC \uC811\uADFC\uD560 \uC218 \uC788\uAE30 \uB54C\uBB38\uC5D0 \uC18D\uB3C4\uAC00 \uB290\uB824\uC9C8 \uC218 \uC788\uC74C</li></ul></li></ul><p><br><br></p><p><strong><em>Eager-Initialize Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonInstance</span> INSTANCE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>App \uC774 \uAD6C\uB3D9\uB420 \uB54C <code>SingletonInstance</code> \uC778\uC2A4\uD134\uC2A4\uB97C \uC0DD\uC131\uD558\uACE0, \uC0DD\uC131\uB41C \uC778\uC2A4\uD134\uC2A4\uB97C <code>getInstance</code> method \uB97C \uD638\uCD9C\uD558\uC5EC \uC778\uC2A4\uD134\uC2A4\uB97C \uC0AC\uC6A9. <br></p><ul><li><p>\uC7A5\uC810</p><ul><li>Single Thread, Multi Thread \uC5D0\uC11C \uB2E8\uC77C \uC778\uC2A4\uD134\uC2A4 \uBCF4\uC7A5</li></ul></li><li><p>\uB2E8\uC810</p><ul><li>Eager-Initialize \uC774\uAE30 \uB54C\uBB38\uC5D0, \uB9CC\uC57D \uC0DD\uC131\uD558\uB294 \uC778\uC2A4\uD134\uC2A4\uAC00 \uBE44\uC6A9\uC774 \uBE44\uC2FC \uAC1D\uCC44\uBA74 \uCD5C\uC801\uD654\uC5D0 \uBB38\uC81C\uAC00 \uC0DD\uAE38 \uC218 \uC788\uC74C</li></ul></li></ul><p><br><br></p><p><strong><em>Double-checked Locking Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">SingletonInstance</span> instance<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">SingletonInstance</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getInstance</code> method \uC5D0 \uBC14\uB85C <em>synchronized</em> \uD0A4\uC6CC\uB4DC\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uACE0, \uC778\uC2A4\uD134\uC2A4\uAC00 null \uC778 \uACBD\uC6B0\uC5D0\uB9CC <em>synchronized block</em> \uC744 \uC9C0\uC815\uD558\uC5EC lock \uC774 \uB418\uB294 \uC0C1\uD669\uC744 \uCD5C\uB300\uD55C \uBC29\uC9C0\uD558\uB294 \uAD6C\uD604\uBC29\uC2DD.<br><br></p><ul><li><p>\uC7A5\uC810</p><ul><li>Single Thread, Multi Thread \uC5D0\uC11C \uB2E8\uC77C \uC778\uC2A4\uD134\uC2A4 \uBCF4\uC7A5</li><li><em>synchronized</em> \uD0A4\uC6CC\uB4DC\uB97C \uC778\uC2A4\uD134\uC2A4\uAC00 null \uC778 \uACBD\uC6B0\uC5D0\uB9CC \uC0AC\uC6A9\uB418\uAE30 \uB54C\uBB38\uC5D0, method \uC5D0 <em>synchronized</em> \uD0A4\uC6CC\uB4DC\uB97C \uC0AC\uC6A9\uD560 \uB54C \uBCF4\uB2E4 \uB354 \uCD5C\uC801\uD654</li></ul></li><li><p>\uB2E8\uC810</p><ul><li>Java 1.5 \uC774\uC0C1\uBD80\uD130 \uC0AC\uC6A9\uAC00\uB2A5</li><li>\uCF54\uB4DC \uBCF5\uC7A1\uB3C4 \uC0C1\uC2B9</li></ul></li></ul><p><br><br></p><p><strong><em>Inner-class(Holder) Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">SingletonInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SingletonInstance</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">SingletonInstanceHolder</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SingletonInstanceHolder</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">SingletonInstance</span> INSTANCE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>synchronized</em> \uC758 \uBE44\uC2FC \uBE44\uC6A9\uBB38\uC81C\uB97C Lazy-initialize \uBC29\uC2DD\uC73C\uB85C \uD574\uACB0\uD55C Singleton \uAD6C\uD604\uBC29\uBC95. <br></p><ul><li><p>\uC7A5\uC810</p><ul><li>Single Thread, Multi Thread \uC5D0\uC11C \uB2E8\uC77C \uC778\uC2A4\uD134\uC2A4 \uBCF4\uC7A5</li><li><em>synchronized</em> \uC758 \uBE44\uC2FC \uBE44\uC6A9\uBB38\uC81C\uB97C Lazy-initialize \uBC29\uC2DD\uC73C\uB85C \uD574\uACB0\uD558\uC5EC Multi Thread \uD658\uACBD\uC5D0\uC11C \uCD5C\uC801\uD654</li></ul></li><li><p>\uB2E8\uC810</p><ul><li>\uB9AC\uD50C\uB809\uC158, \uC9C1\uB82C\uD654/\uC5ED\uC9C1\uB82C\uD654\uC5D0 \uC758\uD574 Singleton \uC774 \uAE68\uC9C8 \uC218 \uC788\uC74C</li></ul></li></ul>`,30),k=n("em",null,"\uCC38\uACE0 Site",-1),v=a(". "),m={href:"https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom",target:"_blank",rel:"noopener noreferrer"},b=a("Initialization-on-demand holder"),g=s(`<p><br><br></p><p><strong><em>Enum Singleton</em></strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SingletonInstance</span> <span class="token punctuation">{</span>
    INSTANCE
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>enum \uC758 \uD2B9\uC131\uC744 \uC774\uC6A9\uD55C \uAD6C\uD604\uBC29\uBC95. <br></p><ul><li><p>\uC7A5\uC810</p><ul><li>\uB9AC\uD50C\uB809\uC158, \uC9C1\uB82C\uD654/\uC5ED\uC9C1\uB82C\uD654 \uAC19\uC740 \uC608\uC0C1\uCE58 \uBABB\uD55C singleton \uC744 \uAE68\uD2B8\uB9AC\uB294 \uBC29\uC2DD\uC5D0 \uC548\uC804</li></ul></li><li><p>\uB2E8\uC810</p><ul><li>....</li></ul></li></ul>`,5);function y(h,w){const e=l("ExternalLinkIcon");return p(),i(o,null,[r,n("p",null,[k,v,n("a",m,[b,c(e)])]),g],64)}var S=t(d,[["render",y],["__file","singleton.html.vue"]]);export{S as default};
